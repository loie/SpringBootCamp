buildscript {
    ext.kotlin_version = '1.1.3'
    ext.spring_boot_version = '1.5.4.RELEASE'
    repositories {
        mavenCentral()
    }
    dependencies {
        classpath "org.jetbrains.kotlin:kotlin-gradle-plugin:$kotlin_version" // Required for Kotlin integration
        classpath "org.springframework.boot:spring-boot-gradle-plugin:$spring_boot_version"
    }
}

apply plugin: 'eclipse'
apply plugin: 'idea'
apply plugin: 'kotlin'
apply plugin: 'org.springframework.boot'

jar {
    baseName = 'spring-bootcamp'
    version = '0.1'
}

repositories {
    mavenCentral()
}

sourceCompatibility = 1.8
targetCompatibility = 1.8

/**
 * Declare dependencies
 * @see http://www.gradle.org/docs/current/userguide/userguide_single.html#sec:how_to_declare_your_dependencies
 */
dependencies {
    compile("org.jetbrains.kotlin:kotlin-stdlib-jre8:${kotlin_version}")
    compile("org.jetbrains.kotlin:kotlin-reflect:${kotlin_version}")
    // tag::jetty[]
    compile ("org.springframework.boot:spring-boot-starter-thymeleaf")
    compile ("org.springframework.boot:spring-boot-starter-web") {
        exclude module: "spring-boot-starter-tomcat"
    }
    // end:jetty[]
    compile ('org.springframework.boot:spring-boot-starter-data-jpa')
    compile ("org.springframework.boot:spring-boot-starter-jetty")
    compile ("org.springframework.boot:spring-boot-starter-security")
    // compile("com.h2database:h2")
    runtime('org.postgresql:postgresql')

    testCompile("org.springframework.boot:spring-boot-starter-test")
    testCompile("org.springframework.security:spring-security-test")
}

springBoot {
    mainClass = 'de.tutorials.springboot.ServerKt'
}